{
    "contents" : "# Classification Tree with rpart\nlibrary(rpart)\nlibrary(RODBC)\nlibrary(rpart.plot)\n\ndbhandle <- odbcConnect('Statistics', uid='reader', pwd='b@n@@n2014')\n\ns_sqlQuery = {\n  'SELECT * \n  FROM vw_STA_FullRiskManagement\n\n  WHERE CountryCode = \\'ES\\'\n  AND IncomeType <> \\'Social Security\\' \n  AND DatabaseId = \\'C\\' \n  AND InvoiceRank = 1 \n  AND DateStart > \\'2013-05-31\\' \n  AND DateStart < \\'2014-06-01\\'\n  AND FutureProfitAndLoss IS NOT NULL'\n}\n# if(!exists(\"risk.data\"))\n{\nrisk.data <- sqlQuery(dbhandle, s_sqlQuery)\n}\n\ns_sqlQuery2 = {\n'SELECT \nCASE WHEN FutureProfitAndLoss > 0  THEN 0 ELSE 1 END as BadCredit\n,Avg(FutureProfitAndLoss) as AVGfpl\nfrom vw_STA_FullRiskManagement\n\n  WHERE CountryCode = \\'ES\\'\n  AND IncomeType <> \\'Social Security\\' \n  AND DatabaseId = \\'C\\' \n  AND InvoiceRank = 1 \n  AND DateStart > \\'2013-07-31\\' \n  AND DateStart < \\'2013-09-01\\'\n  AND FutureProfitAndLoss IS NOT NULL\ngroup by CASE WHEN FutureProfitAndLoss > 0  THEN 0 ELSE 1 END'\n}\n\nCLV <- sqlQuery(dbhandle,s_sqlQuery2)\n\nodbcCloseAll()\n\n# Add a date-of-month of DateStart column\nwholedataset = risk.data\nwholedataset$StartDay <- as.numeric(format(risk.data$DateStart, \"%d\"))\n\n#define the cost of a repeater loan\nc_repeater = 5\n\n#define the coast of a repeater loan\nc_virgin = 15\n\n# Add a column that calculates the yearly p&l including costs. that shows wether the futureprofitandloss is negative\nwholedataset$fpl_inc_costs <- wholedataset$FutureProfitAndLoss - (wholedataset$MaxInvoiceRank -1) *c_repeater - c_virgin\nisbadcredit <- function(x) { if (x[1] <= 0) 1 else 0 }\n\nwholedataset$isbad <- sapply(wholedataset[,c(\"fpl_inc_costs\")],isbadcredit)\n#wholedataset$isbad <- wholedataset$IsDefault\n\nsummary(wholedataset$isbad)\n\n\n# Add Amount to ProvableIncome variable\nwholedataset$atoi <- wholedataset$Amount / wholedataset$ProvableIncome\n\n# Split the dataset into a train and test set\nwholedataset$istrain <- (runif(nrow(risk.data), 0, 1) < 0.6666)\n\ntrain <- subset(wholedataset, istrain==TRUE)\ntest <- subset(wholedataset, istrain==FALSE)\n\n# grow tree\n#define th loss matrix with c(0,falsepositive, falsenegative, 0)\nlossMatrix = matrix(c(0,CLV[1,\"AVGfpl\"],-CLV[2,\"AVGfpl\"],0),nrow=2,ncol=2,byrow=TRUE)\nlossMatrix = matrix(c(0,1,1,0),nrow=2,ncol=2,byrow=TRUE)\nfit <- rpart(isbad ~ ProvableIncome + Province + StartDay + atoi + IncomeDay + Gender + Age + IncomeType + MaritalStatus, data=train, method=\"class\", parms=list(loss=lossMatrix))\n\n\n\n\nprintcp(fit) # display the results \nplotcp(fit) # visualize cross-validation results \nsummary(fit) # detailed s ummary of splits\n\n\n\n# plot tree, extra =2 -> number of correct/number of total observations\nprp(fit, faclen = 20, type = 3, varlen = 20, extra = 2)\n\n\n#####################################\n# MODEL EVALUATION\n\n#predict\ntest$prob <- predict(fit, test, type=\"prob\") [,\"1\"]\n\n\n#apply the good bad average profit and loss times the pd's\nf_isbad_modelpred<- function(x){if((1-x) * CLV[1,\"AVGfpl\"] + x * CLV[2,\"AVGfpl\"] >0) 0 else 1}\n\ntest$pred <- sapply(test$prob, f_isbad_modelpred)\ntest$model_pnl = (1-test$pred) * test$fpl_inc_costs\n\n#display the p&l in the dataset\nsum(test$model_pnl)\n\n#display the p&l if the model was used\nsum(test$fpl_inc_costs)\n\n# \n# predmatrix <- table(test[,c(\"isbad\",\"modelpred\")])\n# predmatrix\n\n# prop.table(predmatrix)\n# plot(prop.table(predmatrix))\n\n\n\n",
    "created" : 1412517788959.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1278205432",
    "id" : "AF6C8734",
    "lastKnownWriteTime" : 1411112293,
    "path" : "~/Dropbox/Novum/13. R/Spain Virgins/CART Tree.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}